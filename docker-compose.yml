version: '3.7'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http.tls=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.http.redirections.entryPoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"  # Usar challenge TLS
      - "--certificatesresolvers.myresolver.acme.email=hospondres23@gmail.com"  # Email para Let's Encrypt
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"  # Archivo para almacenar certificados
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt  # Carpeta para almacenar certificados
    networks:
      - internal

  persistencia:
    image: postgres
    container_name: persistencia
    environment:
      - POSTGRES_DB=persistencia
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user123
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    labels:
      - "traefik.enable=false"
    networks:
      - internal

  backend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=user123
      - DB_NAME=persistencia
      - JWT_SECRET_KEY=secretsecretsecretsecretsecretsecretsecretsecretsecretsecret
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`www.nomcci.top`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=web-secure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8505"
    depends_on:
      - persistencia
    networks:
      - internal
    restart: always

  frontend:
    build:
      context: ./proyectodiplomadofrontend
      dockerfile: Dockerfile
    container_name: frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`www.nomcci.top`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.http.routers.frontend.entrypoints=web-secure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"  # Usa el resolutor de Let's Encrypt
    depends_on:
      - backend
    networks:
      - internal

networks:
  internal:
    driver: bridge
